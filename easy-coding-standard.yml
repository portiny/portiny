imports:
    - { resource: 'vendor/symplify/easy-coding-standard/config/set/psr2.yaml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/set/php71.yaml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/set/clean-code.yaml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/set/symplify.yaml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/set/common.yaml' }

services:
    # code structure & complexity
    PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff:
        absoluteLineLimit: 120
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff:
        absoluteComplexity: 12
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff:
        absoluteNestingLevel: 5
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff:
        spacingBeforeFirst: 1
        spacingAfterLast: 1
    Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff:
        maxCognitiveComplexity: 10
    SlevomatCodingStandard\Sniffs\Classes\TraitUseSpacingSniff:
        linesCountBeforeFirstUse: 1
        linesCountAfterLastUse: 2
    SlevomatCodingStandard\Sniffs\TypeHints\DeclareStrictTypesSniff:
        newlinesCountBetweenOpenTagAndDeclare: 0
        newlinesCountAfterDeclare: 2
        spacesCountAroundEqualsSign: 1

    # PHP
    SlevomatCodingStandard\Sniffs\TypeHints\UselessConstantTypeHintSniff:

    # Use statements
    SlevomatCodingStandard\Sniffs\Namespaces\AlphabeticallySortedUsesSniff:
    SlevomatCodingStandard\Sniffs\Namespaces\UnusedUsesSniff:
        searchAnnotations: true

parameters:
    indentation: tab
    skip:
        PHP_CodeSniffer\Standards\PSR2\Sniffs\ControlStructures\ControlStructureSpacingSniff:
        Symplify\CodingStandard\Sniffs\DependencyInjection\NoClassInstantiationSniff:
        Symplify\CodingStandard\Sniffs\Property\DynamicPropertySniff:
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff:
        PhpCsFixer\Fixer\Operator\NewWithBracesFixer:
        PhpCsFixer\Fixer\ClassNotation\ClassAttributesSeparationFixer:
        Symplify\CodingStandard\Fixer\ClassNotation\LastPropertyAndFirstMethodSeparationFixer:
        PhpCsFixer\Fixer\Basic\BracesFixer:
        PhpCsFixer\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer:
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\MultiLineFunctionDeclarationSniff:
        PhpCsFixer\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer:
        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenStaticFunctionSniff:
        PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff:
        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenReferenceSniff:
        Symplify\CodingStandard\Sniffs\Architecture\ExplicitExceptionSniff:
        Symplify\CodingStandard\Sniffs\Naming\TraitNameSniff:
        Symplify\CodingStandard\Fixer\ControlStructure\PregDelimiterFixer:
        Symplify\CodingStandard\Sniffs\Commenting\VarConstantCommentSniff:
        Symplify\CodingStandard\Sniffs\Architecture\DuplicatedClassShortNameSniff:
        Symplify\CodingStandard\Sniffs\ControlStructure\SprintfOverContactSniff:
        Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer: ~
        Symplify\CodingStandard\Fixer\Naming\PropertyNameMatchingTypeFixer: ~
        Symplify\CodingStandard\Fixer\Solid\FinalInterfaceFixer:
            # contains anonymous class
            - packages/graphql/src/Converter/MutationFieldConverter.php
            - packages/graphql/tests/Converter/QueryFieldConverterTest.php
            - packages/graphql/tests/Provider/QueryFieldsProviderTest.php
            - packages/graphql/tests/Provider/MutationFieldsProviderTest.php

        Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff:
            - packages/doctrine/src/Adapter/Nette/Tracy/Helper.php
            - packages/graphql/src/GraphQL/Schema/SchemaCacheProvider.php

        PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\NestingLevelSniff:
            - packages/graphql/src/GraphQL/Schema/SchemaCacheProvider.php
